// Package handlers provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package handlers

import (
	"time"
)

// Currency defines model for Currency.
type Currency struct {
	AddressValidation string    `json:"addressValidation"`
	Available         bool      `json:"available"`
	Image             string    `json:"image"`
	Name              string    `json:"name"`
	Networks          []Network `json:"networks"`
	Price             float64   `json:"price"`
	Symbol            string    `json:"symbol"`
}

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
}

// Network defines model for Network.
type Network struct {
	Name string `json:"name"`
}

// NetworkPair defines model for NetworkPair.
type NetworkPair struct {
	Network Symbol `json:"network"`
	Symbol  Symbol `json:"symbol"`
}

// Quote defines model for Quote.
type Quote struct {
	Amount     float64     `json:"amount"`
	Difference float64     `json:"difference"`
	Exchange   string      `json:"exchange"`
	From       NetworkPair `json:"from"`
	To         NetworkPair `json:"to"`
}

// Swap defines model for Swap.
type Swap struct {
	CreatedAt     time.Time   `json:"createdAt"`
	Exchange      string      `json:"exchange"`
	From          NetworkPair `json:"from"`
	Id            string      `json:"id"`
	PayinAmount   float64     `json:"payinAmount"`
	PayoutAddress string      `json:"payoutAddress"`
	PayoutAmount  float64     `json:"payoutAmount"`
	Reason        string      `json:"reason"`
	RefundAddress string      `json:"refundAddress"`
	Status        string      `json:"status"`
	To            NetworkPair `json:"to"`
	ToAddress     string      `json:"toAddress"`
	UpdatedAt     time.Time   `json:"updatedAt"`
}

// SwapRequest defines model for SwapRequest.
type SwapRequest struct {
	Amount        float64     `json:"amount"`
	Exchange      string      `json:"exchange"`
	From          NetworkPair `json:"from"`
	RefundAddress string      `json:"refundAddress"`
	To            NetworkPair `json:"to"`
	ToAddress     string      `json:"toAddress"`
}

// Symbol defines model for Symbol.
type Symbol = string

// GetV1CurrenciesParams defines parameters for GetV1Currencies.
type GetV1CurrenciesParams struct {
	// Name Name of the currency
	Name *Symbol `form:"name,omitempty" json:"name,omitempty"`

	// Popular Popular currencies
	Popular *bool `form:"popular,omitempty" json:"popular,omitempty"`

	// Active Active currencies
	Active *bool `form:"active,omitempty" json:"active,omitempty"`

	// Symbols Symbols
	Symbols *[]string `form:"symbols,omitempty" json:"symbols,omitempty"`
}

// GetV1QuotesParams defines parameters for GetV1Quotes.
type GetV1QuotesParams struct {
	// FromSymbol From currency
	FromSymbol Symbol `form:"fromSymbol" json:"fromSymbol"`

	// FromNetwork From network
	FromNetwork Symbol `form:"fromNetwork" json:"fromNetwork"`

	// ToSymbol To currency
	ToSymbol Symbol `form:"toSymbol" json:"toSymbol"`

	// ToNetwork To network
	ToNetwork Symbol `form:"toNetwork" json:"toNetwork"`

	// Amount Amount
	Amount float64 `form:"amount" json:"amount"`
}

// PostV1SwapsJSONRequestBody defines body for PostV1Swaps for application/json ContentType.
type PostV1SwapsJSONRequestBody = SwapRequest
